---
- hosts: localhost

  tasks:
    # This ensures idempotency checks provide better results
    - name: Install Helm Diff plugin
      kubernetes.core.helm_plugin:
        state: present
        plugin_path: https://github.com/databus23/helm-diff

    - name: Add cert-manager Helm repository
      kubernetes.core.helm_repository:
        state: present
        name: jetstack
        repo_url: https://charts.jetstack.io
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Install cert-manager
      kubernetes.core.helm:
        state: present
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        values:
          installCRDs: 'true'
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Apply DigitalOcean DNS Secret
      kubernetes.core.k8s:
        state: present
        template: '../../cert-manager/digitalocean-dns-secret.yaml.j2'
        kubeconfig: ../outputs/kubeconfig.yaml
      vars:
        access_token: "{{ lookup('community.general.onepassword', 'DigitalOcean K3s API Token', field='token', vault='Private') }}"

    - name: Apply LetsEncrypt Issuer
      kubernetes.core.k8s:
        state: present
        template: '../../cert-manager/letsencrypt-issuer.yaml.j2'
        kubeconfig: ../outputs/kubeconfig.yaml
      vars:
        email: "{{ lookup('community.general.onepassword', 'K3s LetsEncrypt Issuer', field='email', vault='Private') }}"

    - name: Force HTTPS redirect on Traefik
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            name: traefik
            namespace: kube-system
          spec:
            valuesContent: |-
              ports:
                websecure:
                  tls:
                    enabled: true
                web:
                  redirectTo: 
                    port: websecure
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Add Longhorn Helm repository
      kubernetes.core.helm_repository:
        state: present
        name: longhorn
        repo_url: https://charts.longhorn.io
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Install Longhorn
      kubernetes.core.helm:
        state: present
        name: longhorn
        chart_ref: longhorn/longhorn
        release_namespace: longhorn-system
        create_namespace: true
        values:
          defaultSettings:
            defaultDataPath: '/storage01'
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Apply Longhorn Ingress
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', '../../longhorn/longhorn-ingress.yml') | from_yaml }}"
        kubeconfig: ../outputs/kubeconfig.yaml

    - name: Make Longhorn storage class the default
      kubernetes.core.k8s:
        state: patched
        kind: StorageClass
        name: local-path
        definition:
          metadata:
            annotations:
              storageclass.kubernetes.io/is-default-class: 'false'
